name: ci
# yamllint disable-line rule:truthy
on: [push, pull_request]
jobs:
  static:
    runs-on: ubuntu-latest
    name: "CI: Running ${{ matrix.test }} tests with perl v${{ matrix.perl-version }}"
    strategy:
      matrix:
        include:
          - test: static
            perl-version: 5.32
          - test: unit
            perl-version: 5.32
          - test: compile-changed
            perl-version: 5.26
          - test: compile
            perl-version: 5.26
    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        apt-get -y update
        apt-get -y install libdbus-1-dev libssh2-1-dev parallel python3-dev python3-yaml python3-jsonschema python3-pip liblua5.3-dev
        pip3 install yamllint jsonnet==0.20.0
        # FFI needs cargo (newer than the packaged version)
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - name: Setup perl
      env:
        INLINE_PYTHON_EXECUTABLE: /usr/bin/python3
      run: |
        # Prefix with space to bypass ./tools/update_spec
        echo " requires 'Code::DRY';" >> cpanfile
        echo " requires 'Date::Parse';" >> cpanfile
        echo " requires 'Regexp::Common';" >> cpanfile
        echo " requires 'Perl::Tidy', '== 20250616.0.0';" >> cpanfile
        . "$HOME/.cargo/env"
        make prepare
    - name: Debug UT 01
      run: |
        echo "--> OS:"
        cat /etc/os-release
        echo "--> Egrep:"
        which egrep
        ls -lai $(which egrep)
        egrep --version
        echo "--> Grep:"
        which grep
        ls -lai $(which grep)
        grep --version
        echo "--> The GIT part:"
        git grep -I -l 'nots3cr3t' ':!data/wsl/Autounattend_*.xml' 'data' || echo "__$?__"
        echo "--> The xargs part (no -L):"
        git grep -I -l 'nots3cr3t' ':!data/wsl/Autounattend_*.xml' 'data' | xargs egrep '(luks|encryption).*password.*nots3cr3t' || echo "__$?__"
        echo "--> The xargs part (with -L):"
        git grep -I -l 'nots3cr3t' ':!data/wsl/Autounattend_*.xml' 'data' | xargs egrep -L '(luks|encryption).*password.*nots3cr3t' || echo "__$?__"
        echo "--> The xargs part with grep:"
        git grep -I -l 'nots3cr3t' ':!data/wsl/Autounattend_*.xml' 'data' | xargs grep -E -L '(luks|encryption).*password.*nots3cr3t' || echo "__$?__"
    - name: Run ${{ matrix.test }} tests
      env:
        TESTS: ${{ matrix.test }}
      run: |
        # Work around https://github.com/actions/checkout/issues/766
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        git fetch origin master
        make test
