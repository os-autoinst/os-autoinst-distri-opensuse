#!/usr/bin/env perl

# The script verifies if test data files included in yaml schedule exist in the repo.

use strict;
use warnings;
use YAML::PP;
use File::Basename;
use Data::Dumper;

=head2 get_testdata_filename

  get_testdata_paths($schedule_file_path);

Returns yaml test data file name(s) with path, in case yaml schedule includes any, either via $include tag or YAML_TEST_DATA variable or both.

=cut

sub get_data_files {
    my ($schedule_file_path) = @_;
    my $ypp                  = YAML::PP->new;
    my $schedule             = $ypp->load_file($schedule_file_path);
    my $include_tag          = '$include';
    my @testdata_list;
    my $included_files = $schedule->{test_data}->{$include_tag};
    if ($included_files) {
        if (ref($included_files) eq 'ARRAY') {
            push(@testdata_list, @{$included_files});
        }
        else {
            push(@testdata_list, $included_files);
        }
    }
    my $vars_test_data = $schedule->{vars}->{YAML_TEST_DATA};
    push(@testdata_list, $vars_test_data) if $vars_test_data;
    return @testdata_list;
}

my $success = 1;
foreach my $schedule_file (@ARGV) {
    my @data_filenames = get_data_files($schedule_file);
    foreach my $item (@data_filenames) {
        unless (-f $item) {
            $success = 0;
            print "Failure: Test data file $item used in $schedule_file does not exist in the repo.\n";
        }
    }
}
$success == 1 ? exit 0 : exit 1;
