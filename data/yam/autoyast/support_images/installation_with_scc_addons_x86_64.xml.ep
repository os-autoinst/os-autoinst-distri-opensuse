<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE profile>
<profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns">
    <suse_register>
        <do_registration config:type="boolean">true</do_registration>
        <email><%= $get_var->('SCC_EMAIL') %></email>
        <reg_code><%= $get_var->('SCC_REGCODE') %></reg_code>
        <install_updates config:type="boolean">true</install_updates>
        % if (keys %$addons) {
        <addons config:type="list">
            % while (my ($key, $addon) = each (%$addons)) {
            <addon>
                <name><%= $addon->{name} %></name>
                <version><%= $addon->{version} %></version>
                <arch><%= $addon->{arch} %></arch>
                % if ($key eq 'we' and $check_var->('SLE_PRODUCT', 'sles')) {
                <reg_code><%= $get_var->('SCC_REGCODE_WE') %></reg_code>
                % }
                % if ($key eq 'we' and $check_var->('SLE_PRODUCT', 'sled')) {
                <reg_code><%= $get_var->('SCC_REGCODE') %></reg_code>
                % }
                % if ($key eq 'rt') {
                <reg_code><%= $get_var->('SCC_REGCODE_RT') %></reg_code>
                % }
                % if ($key eq 'ltss') {
                <reg_code><%= $get_var->('SCC_REGCODE_LTSS') %></reg_code>
                % }
            </addon>
            % }
        </addons>
        %}
    </suse_register>
    <bootloader>
        <global>
            <timeout config:type="integer">45</timeout>
        </global>
    </bootloader>
    <general>
        <mode>
            <confirm config:type="boolean">false</confirm>
        </mode>
        <signature-handling>
            <accept_unsigned_file config:type="boolean">true</accept_unsigned_file>
            <accept_unknown_gpg_key config:type="boolean">true</accept_unknown_gpg_key>
            <accept_non_trusted_gpg_key config:type="boolean">true</accept_non_trusted_gpg_key>
            <import_gpg_key config:type="boolean">true</import_gpg_key>
        </signature-handling>
    </general>
    <partitioning config:type="list">
        <drive>
            <initialize config:type="boolean">true</initialize>
            <use>all</use>
        </drive>
    </partitioning>
    <networking>
        <interfaces config:type="list">
            <interface>
                <bootproto>dhcp</bootproto>
                <device>eth0</device>
                <dhclient_set_default_route>yes</dhclient_set_default_route>
                <startmode>auto</startmode>
            </interface>
        </interfaces>
    </networking>
    <firewall>
        <enable_firewall config:type="boolean">true</enable_firewall>
        <start_firewall config:type="boolean">true</start_firewall>
        <zones config:type="list">
            <zone>
                <name>public</name>
                <interfaces config:type="list">
                    <interface>eth0</interface>
                </interfaces>
                <services config:type="list">
                    <service>ssh</service>
                </services>
                <ports config:type="list">
                    <port>22/tcp</port>
                    <port>30000-50000/tcp</port>
                </ports>
            </zone>
        </zones>
    </firewall>
    <report>
        <errors>
            <log config:type="boolean">true</log>
            <show config:type="boolean">true</show>
            <timeout config:type="integer">0</timeout>
        </errors>
        <messages>
            <log config:type="boolean">true</log>
            <show config:type="boolean">true</show>
            <timeout config:type="integer">0</timeout>
        </messages>
        <warnings>
            <log config:type="boolean">true</log>
            <show config:type="boolean">true</show>
            <timeout config:type="integer">0</timeout>
        </warnings>
        <yesno_messages>
            <log config:type="boolean">true</log>
            <show config:type="boolean">true</show>
            <timeout config:type="integer">0</timeout>
        </yesno_messages>
    </report>
    <keyboard>
        <keyboard_values>
            <delay/>
            <discaps config:type="boolean">false</discaps>
            <numlock>bios</numlock>
            <rate/>
        </keyboard_values>
        <keymap>english-us</keymap>
    </keyboard>
    <language>
        <language>en_US</language>
        <languages/>
    </language>
    <ntp-client>
        <ntp_policy>auto</ntp_policy>
    </ntp-client>
    <software>
        <products config:type="list">
            <product><%= uc $get_var->('SLE_PRODUCT') %></product>
        </products>
        <patterns config:type="list">
            % for my $pattern (@$patterns) {
            <pattern><%= $pattern %></pattern>
            % }
        </patterns>
    </software>
    <services-manager>
        % if ($check_var->('DESKTOP', 'gnome')) {
        <default_target>graphical</default_target>
        % }
        % if ($check_var->('DESKTOP', 'textmode')) {
        <default_target>multi-user</default_target>
        % }
        <services>
            <disable config:type="list"/>
            <enable config:type="list">
                <service>sshd</service>
            </enable>
        </services>
    </services-manager>
    <timezone>
        <hwclock>UTC</hwclock>
        <timezone>Europe/Berlin</timezone>
    </timezone>
    <users config:type="list">
        <user>
            <encrypted config:type="boolean">true</encrypted>
            <fullname>Bernhard M. Wiedemann</fullname>
            <user_password>$6$A5x/aKtAldy8V2Q5$5tFn6SW808brpHQHJUVgHL0zpI3VSFkIrlr5r1xE0mnHTzJY29S4p.aIUv4xGeXU7Z0FWe/vFaBoKOIEyQgJH1</user_password>
            <username>bernhard</username>
        </user>
        <user>
            <encrypted config:type="boolean">true</encrypted>
            <user_password>$6$Viz.6zkOLg.HGiYS$uwvqo4HVVn9/n7UByRDCwf/3h7.jVunrhugXfuxQve7db8kS0Q0flCXajdB/8Odh5tbwfnWf.cT1K8QgWlsci1</user_password>
            <username>root</username>
        </user>
    </users>
    <scripts>
        <post-scripts config:type="list">
            <script>
                <filename>post.sh</filename>
                <interpreter>shell</interpreter>
                <source><![CDATA[
#!/bin/sh
# zypper process is locked by some ruby process, modify the repo file
cd /etc/zypp/repos.d
sed -i 's/enabled=1/enabled=0/' $(ls|grep -i nvidia)
zypper lr
% if ( $get_var->('VERSION') =~ /15-SP[3-5]/ ) {
    # Regarding rpm lock see Q9@ https://documentation.suse.com/de-de/sles/15-SP1/html/SLES-all/app-ay-faq.html
    # quote : "during the post-script phase, YaST still has an exclusive lock on the RPM database."
    # the package cannot be installed the autoyast way, because of the changing package name (eg libyui-rest-api15)
    # only zypper allows to install "by capability".
    mv /var/run/zypp.pid /var/run/zypp.sav
    zypper -n in libyui-rest-api
    mv /var/run/zypp.sav /var/run/zypp.pid
% }
exit 0
]]></source>
            </script>
        </post-scripts>
    </scripts>
</profile>
