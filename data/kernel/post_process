#!/bin/bash

check_for_errors() {
	local dir="$1"
	local error=0

	for file in $(find ./results/$dir -type f); do
		while IFS= read -r line; do
			if [[ "$line" == *"exit_status"* && "$line" == *"1"* ]]; then
				error=1
			elif [[ "$line" == "status"* && "$line" == *"fail"* ]]; then
				error=1
			fi
		done < "$file"
	done

	echo "$error"
}

get_test_description() {
	local file="$1"
	local test_name
	test_name=$(basename "$file")

	while IFS= read -r line; do
		if [[ "$line" == "description"* ]]; then
			test_name="${test_name}::${line#description }"
			break
		fi
	done < "$file"

	echo "$test_name"
}

generate_xunit_report() {
	local dir="$1"
	local results="${dir}_results.xml"
	local error
	error=$(check_for_errors "$dir")

	echo "<testsuite errors=\"$error\" name=\"$dir\">" > "./$results"

	for file in $(find ./results/$dir -type f); do
		local test_name
		test_name=$(get_test_description "$file")
		local test_group
		test_group=$(basename "$(dirname "$file")")

		while IFS= read -r line; do
			if [[ "$line" == "status"* ]]; then
				if [[ "$line" == *"pass"* ]]; then
					echo "<testcase name=\"${test_group}::${test_name}\"/>" >> "./$results"
				elif [[ "$line" == *"fail"* ]]; then
					local failure_message
					failure_message=$(head -10 "$file" | tr -d '\n' | sed 's/"/'\''/g')
					echo "<testcase name=\"${test_group}::${test_name}\">" >> "./$results"
					echo "  <failure message=\"$failure_message\"/>" >> "./$results"
					echo "</testcase>" >> "./$results"
				elif [[ "$line" == *"not run"* ]]; then
					echo "not run: $file"
				fi
			fi
		done < "$file"
	done

	echo "</testsuite>" >> "./$results"
}

for dir in ./results/*; do
	if [[ -d "$dir" && "$(basename "$dir")" != tmp* ]]; then
		generate_xunit_report "$(basename "$dir")"
	fi
done