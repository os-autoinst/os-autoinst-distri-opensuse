name:           ha_qdevice_node
description:    >
  Create a 2 nodes cluster with qdevice/qnetd

  Schedule for qdevice/qnetd test cluster nodes. Use HA_CLUSTER_INIT setting
  in the job group so the schedule loads the tests for a node running
  ha-cluster-init or for nodes running ha-cluster-join. Cluster nodes must be
  run along a support server and a qnetd server. Some settings are defined
  here in the schedule, while others are required outside the schedule.

  The following settings must be defined outside of the schedule, either in
  the job group yaml configuration or in a test suite.

  CLUSTER_NAME defining a name for the cluster test, for example qdevice. Only
  use characters permitted by DNS in this name
  HA_CLUSTER_INIT set to yes on the node that does ha-cluster-init, and to
  no on the nodes that do ha-cluster-join
  HA_CLUSTER_JOIN set to the hostname of the node that runs ha-cluster-init
  HDD_1 pointing to a qcow2 image generated by created_hdd_ha_textmode
  HOSTNAME set to the name of the node hostname
  NICTYPE and WORKER_CLASS must be set to 'tap' in the job group directly in qemu based jobs.
  PARALLEL_WITH pointing to the name of the support server job
  UEFI_PFLASH_VARS pointing to a qcow2 image with the UEFI vars generated
  by create_hdd_ha_textmode (if necessary)
  YAML_SCHEDULE set to schedule/ha/bv/ha_qdevice_node.yaml
vars:
  # Boot qcow2 image generated by create_hdd_ha_textmode
  BOOT_HDD_IMAGE: "1"
  DESKTOP: textmode
  HA_CLUSTER: "1"
  HDDMODEL: scsi-hd
  # Number of nodes. This setting must match CLUSTER_INFOS in the support server job
  NUM_NODES: "2"
  QDEVICE: "1"
  # qdevice test role is client in the cluster nodes and qnetd_server in the server
  QDEVICE_TEST_ROLE: client
  # Disable qemu snapshots to avoid unexpected fences in HA tests
  QEMU_DISABLE_SNAPSHOTS: "1"
  USE_SUPPORT_SERVER: "1"
schedule:
  - boot/boot_to_desktop
  - ha/wait_barriers
  - console/system_prepare
  - console/consoletest_setup
  - console/check_os_release
  - console/hostname
  - ha/ha_sle15_workarounds
  - ha/firewall_disable
  - ha/iscsi_client
  - ha/watchdog
  - '{{cluster_setup}}'
  - ha/qnetd
  - '{{boot}}'
  - ha/check_after_reboot
conditional_schedule:
  cluster_setup:
    HA_CLUSTER_INIT:
      yes:
        - ha/ha_cluster_init
      no:
        - ha/ha_cluster_join
  boot:
    HA_CLUSTER_INIT:
      no:
        - boot/boot_to_desktop
