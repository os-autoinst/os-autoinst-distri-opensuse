name:           ha_qdevice_node2
description:    >
  Create a 2 nodes cluster with qdevice/qnetd

  This schedule corresponds to the node that runs ha-cluster-join in a
  qdevice/qnetd cluster test. It must be scheduled PARALLEL_WITH a support
  server, as well as the job that provides the the cluster node that initializes
  the cluster and the qnetd server. Some settings are defined here in the
  schedule, while others are required outside the schedule.

  The following settings must be defined outside of the schedule, either in
  the job group yaml configuration or in a test suite.

  CLUSTER_NAME defining a name for the cluster test, for example qdevice. Only
  use characters permitted by DNS in this name
  HDD_1 pointing to a qcow2 image generated by created_hdd_ha_textmode
  NICTYPE set to tap in qemu tests
  PARALLEL_WITH pointing to the name of the support server job
  UEFI_PFLASH_VARS pointing to a qcow2 image with the UEFI vars generated
  by create_hdd_ha_textmode (if necessary)
  WORKER_CLASS
  YAML_SCHEDULE set to schedule/ha/bv/ha_qdevice_node2.yaml
vars:
  # Boot qcow2 image generated by create_hdd_ha_textmode
  BOOT_HDD_IMAGE: "1"
  DESKTOP: textmode
  HA_CLUSTER: "1"
  # hostname of the host that initialized the cluster
  HA_CLUSTER_JOIN: "%CLUSTER_NAME%-node01"
  HDDMODEL: scsi-hd
  HOSTNAME: "%CLUSTER_NAME%-node02"
  # Number of nodes. This setting must match CLUSTER_INFOS in the support server job
  NUM_NODES: "2"
  QDEVICE: "1"
  # qdevice test role is client in the cluster nodes and qnetd_server in the server
  QDEVICE_TEST_ROLE: client
  # Disable qemu snapshots to avoid unexpected fences in HA tests
  QEMU_DISABLE_SNAPSHOTS: "1"
  USE_SUPPORT_SERVER: "1"
schedule:
  - boot/boot_to_desktop
  - ha/wait_barriers
  - console/system_prepare
  - console/consoletest_setup
  - console/check_os_release
  - console/hostname
  - ha/ha_sle15_workarounds
  - ha/firewall_disable
  - ha/iscsi_client
  - ha/watchdog
  - ha/ha_cluster_join
  - ha/qnetd
  - boot/boot_to_desktop
  - ha/check_after_reboot
