# SUSE's openQA tests
#
# Copyright 2022 SUSE LLC
# SPDX-License-Identifier: FSFAP
#
# Summary: Run 'Check for processor vulnerability mitigations' test case of EAL4 test suite
# Maintainer: QE Security <none@suse.de>
# Tags: poo#111809

use base 'consoletest';
use testapi;
use utils;
use eal4_test;
use Utils::Architectures;
use serial_terminal 'select_serial_terminal';

sub run {
    my ($self) = shift;

    select_serial_terminal;

    my $script = 'spectre-meltdown-checker.sh';
    my $log_file = 'spectre-meltdown-checker.log';

    # use the file in gitlab
    assert_script_run("cd $eal4_test::code_dir/pentest/cpu-vul");

    # Run the test script
    script_run("sh $script --no-color > $log_file 2>&1", timeout => 180);

    upload_logs($log_file);

    my $summary = script_output("grep 'SUMMARY' $log_file");
    record_info('SUMMARY', $summary);

    # Check if the CPU is Intel or not
    # Used for CVE-2023-20569 whitelisting
    my $is_not_intel = script_run("grep -i 'model name' /proc/cpuinfo | grep -m 1 -qi 'intel'");

    foreach my $item (split(/\s/, $summary)) {
        if ($item !~ /(^CVE-.*):(\w+)/) {
            next;
        }
        my $name = $1;
        my $result = $2;

        # CVE-2018-3639 will fail on aarch64 OSD worker.
        # The reason is CPU doesn't support SSBD.
        my $aarch64_failure = is_aarch64 && $name eq 'CVE-2018-3639';

        # CVE-2023-20569 will fail on workers with specific CPUs.
        # Check for the failure only on x86_64 Intel.
        # poo#168697
        my $x86_64_failure = is_x86_64 && $is_not_intel && $name eq 'CVE-2023-20569';

        if ($result ne 'OK') {
            record_info($name, "Check failed: $item, please see $log_file for more details", result => 'fail');
            $self->result('fail') unless $aarch64_failure || $x86_64_failure;
            next;
        }
        record_info($name, $item);
    }

}

1;
