# Copyright (C) 2019 SUSE Linux GmbH
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, see <http://www.gnu.org/licenses/>.

# Summary: "Fill in" a previously-created custom PXE boot entry
# (setup_pxe.sh -C ...) by retrieving and saving the needed
# kernel and initrd from a specified local block device.
# kernel and initrd are supposed to have been generated by a client
# (1st child) test, e.g. after its initial installation.
# Maintainer: Klaus G. Wagner <kgw@suse.com>

use strict;
use warnings;
use base 'basetest';
use lockapi;
use testapi;    # sub autoinst_url()
use mmapi;

sub run {
    my $self = shift;

    if (get_var('SUPPORT_SERVER_PXE_CUSTOMKERNEL')) {
        # FIXME: default value? This would be the standard iSCSI export after an installation
        my $pxekernel_disk = get_var('SUPPORT_SERVER_PXE_CUSTOMKERNEL_DISK') // "/dev/sdb";
        my $pxekernel_bdev = get_var('SUPPORT_SERVER_PXE_CUSTOMKERNEL_BDEV') // "/dev/sdb2";

        # wait until client notifies us that the custom kernel and initrd
        # are now ready for retrieval
        my $jobid_client = get_children();
        $jobid_client = (keys %$jobid_client)[0];
        mutex_wait("custom_pxe_client_ready", $jobid_client);

        # Procedure similar to setup_pxe.sh in tests/support_server/setup.pm
        # FIXME: pxe_customkrnl.sh got already downloaded  in setup_pxe.sh
        #        Would be way cleaner to do it here, but this curl command times out! autoinst_url() no longer correct?
        # assert_script_run "curl -f -v " . autoinst_url . "/data/supportserver/pxe/pxe_customkrnl.sh > pxe_customkrnl.sh\n";
        # This script does the actual work of retrieving
        # (its defaults correspond to the ones of preceding run of "setup_pxe.sh -C" in setup.pm)
        # WARNING: the supportserver might still be unable to see $pxekernel_bdev,
        # since the partitions were created by the client during installation.
        # We may have to refresh the server's idea of the disk's partitioning!
        assert_script_run "/bin/bash -ex /usr/local/bin/pxe_customkrnl.sh -B \"$pxekernel_bdev\" -D \"$pxekernel_disk\"";

        # Notify client that the extended pxe config is now ready for use
        mutex_create("custom_pxe_ready", $jobid_client);
        record_info("PXE_ready", "Mutex \"custom_pxe_ready\" set");
    }
    else {
        record_info("No action", "SUPPORT_SERVER_PXE_CUSTOMKERNEL is not set");
    }
    $self->result('ok');
}


sub test_flags {
    return {fatal => 1};
}

1;
