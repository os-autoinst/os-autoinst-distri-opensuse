# Copyright 2019 SUSE Linux GmbH
# SPDX-License-Identifier: GPL-2.0-or-later

# Summary: "Fill in" a previously-created custom PXE boot entry
# (setup_pxe.sh -C ...) by retrieving and saving the needed
# kernel and initrd from a specified local block device.
# kernel and initrd are supposed to have been generated by a client
# (1st child) test, e.g. after its initial installation.
# Maintainer: Klaus G. Wagner <kgw@suse.com>

use base 'basetest';
use lockapi;
use testapi;    # sub autoinst_url()
use mmapi;

sub run {
    my $self = shift;

    if (get_var('SUPPORT_SERVER_PXE_CUSTOMKERNEL')) {
        # Default: the supportserver's standard iSCSI export and the root device
        # after the client completed an initial installation on this disk
        my $pxekernel_disk = get_var('SUPPORT_SERVER_PXE_CUSTOMKERNEL_DISK') // "/dev/sdb";
        my $pxekernel_bdev = get_var('SUPPORT_SERVER_PXE_CUSTOMKERNEL_BDEV') // "/dev/sdb2";

        # wait until client notifies us that the custom kernel and initrd
        # are now ready for retrieval
        my $jobid_client = get_children();
        $jobid_client = (keys %$jobid_client)[0];
        mutex_wait("custom_pxe_client_ready", $jobid_client);

        # Cf. sub setup_pxe_server() in tests/support_server/setup.pm
        # pxe_customkrnl.sh supposed to have already been downloaded there.
        # FIXME: Would be way cleaner to do it here, but this curl command times out! autoinst_url() no longer correct?
        # assert_script_run "curl -f -v " . autoinst_url . "/data/supportserver/pxe/pxe_customkrnl.sh > pxe_customkrnl.sh\n";
        #
        # Actually retrieve kernel and initrd from $pxekernel_bdev.
        # Default source and destination locations according to the defaults
        # for pxe_customkrnl.sh options -k -i -K -I.
        assert_script_run "/bin/bash -ex pxe_customkrnl.sh -B \"$pxekernel_bdev\" -D \"$pxekernel_disk\"";

        # Notify client that the extended pxe config is now ready for use
        mutex_create("custom_pxe_ready", $jobid_client);
        record_info("PXE_ready", "Mutex \"custom_pxe_ready\" set");
    }
    else {
        record_info("No action", "SUPPORT_SERVER_PXE_CUSTOMKERNEL is not set");
    }
    $self->result('ok');
}


sub test_flags {
    return {fatal => 1};
}

1;
